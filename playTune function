#include <hidef.h>           /* common defines and macros */
#include "derivative.h"      /* derivative-specific definitions */
#include "string.h"

int playTune(void);

void main(void) {
  int flag = 1;               // flag = 1 -> playing tune
  flag = playTune();   // returns 0 -> ready to receive new tune
  
}

int playTune(void) {
  
  int tuneBuffer = 12;
  int arrLen;
  int i = 0;
  
  if (strlen(rawData) % 2 != 0) {           // making data array is divisible by 2 so it can be split into tune and time arrays
    arrLen = (strlen(rawData)/2) + 1;
  } 
  else {
    arrLen = (strlen(rawData)/2);           // if array has an odd number of elements, add 1 to the length
  }
    
  DDRT =0xFF;                               // set port T as output
  PTT = 0x00;                               // clear port T
  
  for (i = 0; i < arrLen; i++){             // iterate through arrays
    int timeCounter = rawData[2*i] * rawData[2*i];         // create unique large time values - this is how long the tune will play for
    int tuneCounter = rawData[2*i + 1] * tuneBuffer;   // this is the counter between toggling speaker on and off - different times create different tunes 
    
   while (timeCounter > 0) {
    
    tuneCounter = rawData[2*i + 1] * tuneBuffer;
             
    PTT ^= (1<<5);                          //toggle bit 5 of P (PT5) - toggle speaker on/off

    while (tuneCounter >= 0) {
     
    tuneCounter--;                          
    }
   
   timeCounter--;
   }  
  }
  
  return 0;
}
